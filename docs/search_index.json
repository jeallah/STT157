[["index.html", "AniCom: Anime Recommendation System using Collaborative Filtering Abstract", " AniCom: Anime Recommendation System using Collaborative Filtering Jeallah Christine C. Cabrillas 2021-12-19 15:35:32 Abstract This paper will study about recommendation systems. "],["introduction.html", "1 Introduction 1.1 Background of the Study 1.2 Statement of the Problem 1.3 Significance of the study 1.4 Scope and delimitation", " 1 Introduction          This chapter opens the main topic and focus of this study. The introduction presents the general information and knowledge, problem statement, significance, and the scope and delimitation of the study. 1.1 Background of the Study          Recommender systems are machine learning systems that help users discover new products and services. Recommender systems are an essential feature in our digital world, as users are often overwhelmed by choice and need help finding what theyre looking for (Shetty, 2021). A recommender system is a type of information filtering system. By drawing from huge data sets, the systems algorithm can pinpoint accurate user preferences. Once you know what your users like, you can recommend new, relevant content. And thats true for everything from movies and music, to romantic partners. Netflix, YouTube, Tinder, and Amazon are all examples of recommender systems in use. The systems entice users with relevant suggestions based on the choices they make (Severt, 2020). A Recommender System is composed of two modules: a database and a filtering technique. The database is responsible for storing information about users, items, and the associated ratings. The filtering technique is composed of an algorithm, generally split into two stages. On the first, the similarities between users or items are identified providing a neighborhood of each item or user. At the second stage, the system predicts ratings corresponding to the items unseen by the user, and only the best ones are used as a recommendation (Bobadilla et al., 2013). As a result of research, several types of filtering algorithms have been developed: Collaborative filtering, Content-based filtering, Demographic filtering, Social filtering, Hybrid filtering (Zhou et al., 2011). The main focus of this study is on collaborative filtering.           Collaborative filtering is a type of personalized recommendation strategy that identifies the similarities between users (based on site interactions) to serve relevant product recommendations across digital properties. Recommender systems collect user information, mining this data to inform which items to display (Retta, 2020). Collaborative Filtering doesnt need a good amount of information of items features (for example in a movie, it can be movie attributes such as genre, year, director, actor, etc.) except users historical preference on a set of items. Because its based on historical data, the core assumption here is that the users who have agreed in the past tend to also agree in the future (Luo, 2019). In collaborative filtering, there are several types of methods in dealing with the data but in this study, the clustering method is utilized. The method of identifying similar groups of data in a dataset is called clustering. It is one of the most popular techniques in data science. Entities in each group are comparatively more similar to entities of that group than those of the other groups. Clustering is the task of dividing the population or data points into a number of groups such that data points in the same groups are more similar to other data points in the same group than those in other groups. In simple words, the aim is to segregate groups with similar traits and assign them into clusters (Kaushik, 2020). There are plenty of examples of recommendation systems. It may be a book recommendation system, song recommendation system, or movies recommendation system. In the case of this study, we are going to build an anime recommendation system.             The word anime is an abbreviation of the word animation. In Japan, the word is used to refer to all animation. However, outside of Japan, it has become the catch-all term for animation from Japan. Anime was produced by and for Japan  a local product, with a distinct look-and-feel to not just the artwork but the storytelling, the themes, and the concepts. Over the last forty years, it has become an international phenomenon, attracting millions of fans and being translated into many languages. Its tempting to think of anime as a genre. It isnt, at least no more than the animation itself is a genre, but rather a description of how the material is produced. Anime shows, like books or movies, fall into any number of existing genres: comedy, drama, sci-fi, action-adventure, horror, and so on (Yegulalp, 2018).            This study focuses on building an anime recommendation system using collaborative filtering. We call this recommendation system as AniCom. In this study, we are dealing with different user ratings in building the prediction preference of users. This allows users or anime watchers to discover new items that they preferred watching among the diversity of anime available. We were able to identify users specific interests and use that information in the context of the Recommendation system. 1.2 Statement of the Problem            This study aimed to investigate the collaborative filtering recommendation system in predicting preferences. Specifically, it aims to achieve the following: Build a collaborative filtering recommendation system using a clustering algorithm. Build a recommendation system for anime. Build and implement recommendation system using python. 1.3 Significance of the study            The study discusses a collaborative filtering recommendation system using the clustering algorithm. The findings of this study will serve as additional literature about recommendation systems. The result of this study will be of great benefit to the recommendation system users, developers, and future researchers. Users. It is most helpful in recommendation system users in finding items of their interest. Specifically, it is helpful for anime watchers and fans who want to discover more anime to watch based on their preference. Developers. The concept discussed in this topic will enable the developer to explore other possible machine learning algorithms. Future researchers. This study may be helpful for students and future researchers as an additional reference for the topic of the recommendation system. It is significant for future researchers who want to research machine learning and build a collaborative filtering recommendation system. 1.4 Scope and delimitation            The study mainly focused on building a recommendation system for anime. It makes use of secondary data and uses machine learning for the implementation of recommendation systems. The process included were clustering method, data preprocessing, exploratory data analysis, etc. However, the study will not focus on how to collect and generate the data since this study uses the secondary data found in the reliable database on the internet. It is only limited to collaborative filtering using a clustering algorithm. This means that other types of recommendation systems will not be implemented and other methods in dealing with the data aside from clustering algorithm will not be performed. Furthermore, this study focuses only on building an anime recommendation system. This study might not be applicable in other recommendation systems (e.g. Book recommendation system, movie recommendation system, etc.). And lastly, the recommendation system is limited to python machine programming language. Another machine programming language (such as R, Java, and C++) is not implemented. "],["review-of-related-literature.html", "2 Review of Related Literature", " 2 Review of Related Literature    In this chapter, we will be able to further understand about recommendation system, collaborative filtering and its types, and different clustering technique that will be explored in this study. "],["recommendation-system.html", "3 Recommendation System", " 3 Recommendation System               Recommender systems are the systems that are designed to recommend things to the user based on many different factors. These systems predict the most likely product that the users are most likely to purchase and are of interest to (Dwivedi, 2020). A recommender system is a type of information filtering system (Severt, 2020). It deals with a large volume of information present by filtering the most important information based on the data provided by a user and other factors that take care of the users preference and interest. It finds out the match between user and item and imputes the similarities between users and items for recommendation (Dwivedi, 2020). By drawing from huge data sets, the systems algorithm can pinpoint accurate user preferences. Once you know what your users like, you can recommend new, relevant content. And thats true for everything from movies and music, to romantic partners. Netflix, YouTube, Tinder, and Amazon are all examples of recommender systems in use. The systems entice users with relevant suggestions based on the choices they make (Severt, 2020). Recommender systems combine ideas from user profiling, information filtering, and machine learning to deliver users a more intelligent and proactive information service by making concrete product or service recommendations that match their learned user preferences and needs. The recommender technology is superior to other information filtering applications because of its ability to provide personalized and meaningful information recommendations. For example, while standard search engines are very likely to generate the same results to different users entering identical search queries, recommender systems are able to generate results to each user that are personalized and more relevant because they take into account each users interests (Zhou et al., 2011). A Recommender System is composed of two modules: a database and a filtering technique. The database is responsible for storing information about users, items, and the associated ratings. The filtering technique is composed of an algorithm, generally split into two stages. On the first, the similarities between users or items are identified providing a neighborhood of each item or user. At the second stage, the system predicts ratings corresponding to the items unseen by the user, and only the best ones are used as recommendations (Bobadilla et al., 2013). As a result of research, several types of filtering algorithms have been developed: Collaborative filtering, Content-based filtering, and Hybrid filtering (Zhou et al., 2011). Content-based recommender systems store content information about each item to be recommended. This information will be used to recommend items similar to the ones the user preferred in the past, based on how similar certain items are to each other or the similarity with respect to user preferences (also represented by means of a subset of content features). Collaborative filtering recommender systems attempt to identify groups of people with similar tastes to those of the user and recommend items that they have liked. And, Hybrid recommender systems combine both content and collaborative approaches. Different combination methods could be used from running both alternatives separately and combining their prediction to construct a general unifying model which incorporates both models (de Campos et al., 2008). "],["collaborative-filtering.html", "4 Collaborative Filtering 4.1 User-based Collaborative Filtering (UBCF) 4.2 Item-based Collaborative Filtering (IBCF)", " 4 Collaborative Filtering         Collaborative filtering is a type of personalized recommendation strategy that identifies the similarities between users (based on site interactions) to serve relevant product recommendations across digital properties. Recommender systems collect user information, mining this data to inform which items to display (Retta, 2020). Collaborative Filtering doesnt need a good amount of information of items features (for example in a movie, it can be movie attributes such as genre, year, director, actor, etc.) except users historical preference on a set of items. Since its based on historical data, the core assumption here is that the users who have agreed in the past tend to also agree in the future (Luo, 2019), and the core idea behind such systems is that the historical data of the users should be enough to make a prediction. We dont need anything more than that historical data, no extra push from the user, no presently trending information, etc. Collaborative filtering (CF) collects information about a user by asking them to rate items and makes recommendations based on highly-rated items by users with similar tastes. CF approaches make recommendations based on the ratings of items by a set of users (neighbors) whose rating profiles are most similar to that of the target user. CF algorithms generally compute the overall similarity or correlation between users and use that as a weight when making recommendations. In a book recommendation application, for example, the first step for the CF system is to try to find the neighbors of the target user. The neighbors refer to other users who have similar tastes in books (rate the same books similarly). In the second step, only the books that are highly rated by the neighbors would be recommended (Zhou et al., 2011). Collaborative filtering (CF) can be categorized into two main methods as user-based collaborative filtering (memory-based) and item-based collaborative filtering (model-based) (Lee, 2015). 4.1 User-based Collaborative Filtering (UBCF)        The user-based collaborative filtering approach is to predict items to the target user that are already items of interest for other users who are similar to the target user. UBCF needs the explicit rating scores of items rated by users to calculate similarities between users and exploits k-nearest neighbor algorithms to find the nearest neighbors based on user similarities. And then, it generates prediction in terms of items by combining the neighbor users rating scores based on similarity weighted averaging (Lee, 2015). 4.2 Item-based Collaborative Filtering (IBCF)         The item-based collaborative filtering approach is to predict items by inquiring into similarities between the items and other items that are already associated with the user. IBCF needs a set of items that the target user has already rated to calculate similarities between items and a target item. And then, it generates predictions in terms of the target item by combining the target users previous preferences based on these item similarities. In IBCF, users preference data can be collected in two ways. One is that the user explicitly gives a rating score to an item within a certain numerical scale. The other is that it implicitly analyzes users purchase records or click-through rates (Lee, 2015). "],["clustering.html", "5 Clustering 5.1 Partition-based Algorithms 5.2 Hierarchical-based Algorithms 5.3 Density-based Algorithms 5.4 Grid-based Algorithms", " 5 Clustering        Clustering algorithms aim to group the fingerprints in classes of similar elements. The clustering requires the concept of a metric. These algorithms implement the straightforward assumption that similar data belongs to the same class. In cluster analysis, no assumption is made about the number of classes and their structure (statistical distribution); rather, the number of classes can be defined from the result of the analysis. Several different clustering techniques have been developed (di Natale &amp; Martinelli, 2019): partition-based algorithms hierarchical-based algorithms, density-based algorithms, and grid-based algorithms. 5.1 Partition-based Algorithms        Partitional clustering assigns a set of data points into k-clusters by using iterative processes. In these processes, n data are classified into k-clusters. The predefined criterion function J assigns the datum into kth number set according to the maximization and minimization calculation in k sets. 5.1.1 K-means Algorithm       The K-Means clusters were first developed by Mac Queen (1967). In the K-Means clusters, clusters are formed using Euclidean distance. In the K-Means algorithm, unsupervised learning is used and k classes are created which minimizes the error function. In K-Means clustering, k cluster centers are created from the selected data set. It is then placed at the nearest cluster using Euclidean distance. New cluster centers are formed according to the results of the clustering. From the calculations of the clustering, the cluster center is recalculated. The arithmetic average is used as the calculation method, and the new cluster center is determined. All samples are reclassified according to the new center. This process is repeated until it is determined that the samples in the set have not passed to another set. 5.2 Hierarchical-based Algorithms      In data mining and statistics, hierarchical clustering analysis is a method of cluster analysis that seeks to build a hierarchy of clusters i.e. tree-type structure based on the hierarchy. There are two types of hierarchical cluster analysis strategies, agglomerative clustering, and divisive clustering (GeeksforGeeks, 2021). 5.2.1 Agglomerative Clustering       Agglomerative Clustering: Also known as bottom-up approach or hierarchical agglomerative clustering (HAC). A structure that is more informative than the unstructured set of clusters returned by flat clustering. This clustering algorithm does not require us to pre-specify the number of clusters. Bottom-up algorithms treat each data as a singleton cluster at the outset and then successively agglomerates pairs of clusters until all clusters have been merged into a single cluster that contains all data (GeeksforGeeks, 2021). 5.2.2 Divisive Clustering      Divisive clustering: Also known as a top-down approach. This algorithm also does not require pre-specify the number of clusters. Top-down clustering requires a method for splitting a cluster that contains the whole data and proceeds by splitting clusters recursively until individual data have been split into singleton clusters (GeeksforGeeks, 2021). 5.3 Density-based Algorithms        Density-Based Clustering refers to unsupervised learning methods that identify distinctive groups/clusters in the data, based on the idea that a cluster in data space is a contiguous region of high point density, separated from other such clusters by contiguous regions of low point density (University of New South Wales, 2011). The data points in the separating regions of low point density are typically considered noise/outliers. The clusters created in these methods can be of arbitrary shape. Following are the examples of Density-based clustering algorithms (Sharma, 2021). 5.3.1 DBSCAN (Density-Based Spatial Clustering of Applications with Noise)       DBSCAN groups data points together based on the distance metric and criterion for a minimum number of data points. It takes two parameters  eps and minimum points. Eps indicates how close the data points should be to be considered as neighbors. The criterion for minimum points should be completed to consider that region as a dense region (Sharma, 2021). 5.3.2 OPTICS (Ordering Points to Identify Clustering Structure)        It is similar in process to DBSCAN, but it attends to one of the drawbacks of the former algorithm i.e. inability to form clusters from data of arbitrary density. It considers two more parameters which are core distance and reachability distance. Core distance indicates whether the data point being considered is core or not by setting a minimum value for it. Reachability distance is the maximum of core distance and the value of distance metric that is used for calculating the distance among two data points. One thing to consider about reachability distance is that its value remains not defined if one of the data points is a core point (Sharma, 2021). 2.3.3.3 HDBSCAN (Hierarchical Density-Based Spatial Clustering of Applications with Noise) HDBSCAN is a density-based clustering method that extends the DBSCAN methodology by converting it to a hierarchical clustering algorithm (Sharma, 2021). 5.4 Grid-based Algorithms     In grid-based clustering, the data set is represented into a grid structure that comprises of grids (also called cells). The overall approach in the algorithms of this method differs from the rest of the algorithms. They are more concerned with the value space surrounding the data points rather than the data points themselves. One of the greatest advantages of these algorithms is their reduction in computational complexity. This makes it appropriate for dealing with humongous data sets. After partitioning the data sets into cells, it computes the density of the cells which helps in identifying the clusters. A few algorithms based on grid-based clustering are as follows (Sharma, 2021). :  5.4.1 STING (Statistical Information Grid Approach)     In STING, the data set is divided recursively in a hierarchical manner. Each cell is further sub-divided into a different number of cells. It captures the statistical measures of the cells which helps in answering the queries in a small amount of time (Sharma, 2021). 5.4.2 Wave Cluster        In this algorithm, the data space is represented in form of wavelets. The data space composes an n-dimensional signal which helps in identifying the clusters. The parts of the signal with a lower frequency and high amplitude indicate that the data points are concentrated. These regions are identified as clusters by the algorithm. The parts of the signal where the frequency high represents the boundaries of the clusters (Sharma, 2021). 5.4.3 CLIQUE (Clustering in Quest)        CLIQUE is a combination of density-based and grid-based clustering algorithm. It partitions the data space and identifies the sub-spaces using the Apriori principle. It identifies the clusters by calculating the densities of the cells (Sharma, 2021) "],["summary-and-conclusion.html", "Summary and Conclusion", " Summary and Conclusion          In this digital age where the internet is accessible to most of us, marketers, business owners, movie producers, etc. utilize the different online platforms to promote and sell their products and services. In just a click and swipe of their gadgets, customers can buy products even a thousand miles away from them but the problem of customers is choosing what best product for their needs out of a wide variety of options online. We can say that; technologys accessibility becomes easier but most users are having a hard time sorting out their preferences. The discovery of Recommendation systems is really useful for the users who are often overwhelmed by choices and need help searching for what theyre looking for. Recommendation systems suggest relevant products and services based on the users history of transaction, preferences, choices, and pattern of buying habits and behavior. Users can discover new and relevant products that they might need.           Recommendation system comes in different types but the most basic ones are content-based recommendation system, collaborative filtering recommendation system, and hybrid recommendation system. AniCom focuses only on collaborative filtering in which it only needs users historical preferences on a set of items. Sufficient historical data of users is needed to make accurate predictions of preference. The main method of collaborative filtering can be categorized into two which are item-based and user-based collaborative filtering. Both methods will be explored in creating a collaborative filtering recommendation system. In dealing with our data, we will utilize clustering in which is the method of identifying similar groups of data in a dataset. Clustering has several types which can be categorized into partitional-based, hierarchical-based, density-based, and grid-based clustering. Exploration of such types is needed to come up with the best clustering techniques to be used for building AniCom. "],["plan-for-this-thesis.html", "Plan for this Thesis", " Plan for this Thesis          This study aimed to investigate the collaborative filtering recommendation system in predicting preferences. Specifically, it aims to achieve the following: build a collaborative filtering recommendation system using a clustering algorithm, build a recommendation system for anime, and build and implement a recommendation system using python. The data collection is not needed in this study since secondary data retrieved from a reliable internet database is utilized. The study will solely focus on data preprocessing, data exploratory, and machine learning to create a collaborative filtering recommendation system. "],["references.html", "References:", " References: Shetty, B. (2021, June 2). An In-Depth Guide to How Recommender Systems Work. Built In. https://builtin.com/data-science/recommender-systems Severt, N. (2020, June 18). An Introduction to Recommender Systems (+9 Easy Examples). Iterators. https://www.iteratorshq.com/blog/an-introduction-recommender-systems-9-easy-examples/ Bobadilla, J., Ortega, F., Hernando, A., &amp; Gutiérrez, A. (2013). Recommender systems survey. Knowledge-Based Systems, 46, 109132. https://doi.org/10.1016/j.knosys.2013.03.012 Zhou, X., Xu, Y., Li, Y., Josang, A., &amp; Cox, C. (2011). The state-of-the-art in personalized recommender systems for social networking. Artificial Intelligence Review, 37(2), 119132. https://doi.org/10.1007/s10462-011-9222-1 Retta, L. (2020, November 13). The power of collaborative filtering. Dynamic Yield. https://www.dynamicyield.com/lesson/collaborative-filtering/ Luo, S. (2019, February 6). Introduction to Recommender System - Towards Data Science. Medium. https://towardsdatascience.com/intro-to-recommender-system-collaborative-filtering-64a238194a26 Kaushik, S. (2020, October 18). Clustering | Types Of Clustering | Clustering Applications. Analytics Vidhya. https://www.analyticsvidhya.com/blog/2016/11/an-introduction-to-clustering-and-different-methods-of-clustering/ Yegulalp, S. (2018, September 7). What Is Anime? An Introduction to Japanese Animation. LiveAbout. https://www.liveabout.com/what-is-anime-144982 Dwivedi, R. (2020, April 16). What Are Recommendation Systems in Machine Learning? | Analytics Steps. https://www.analyticssteps.com/blogs/what-are-recommendation-systems-machine-learning de Campos, L. M., Fernández-Luna, J. M., &amp; Huete, J. F. (2008). A collaborative recommender system based on probabilistic inference from fuzzy observations. Fuzzy Sets Lee, Y. (2015, December). RECOMMENDATION SYSTEM USING COLLABORATIVE FILTERING. SJSU ScholarWorks. https://scholarworks.sjsu.edu/etd_projects/439/ di Natale, C., &amp; Martinelli, E. (2019, January 1). Data Analysis. ScienceDirect. https://www.sciencedirect.com/science/article/pii/B9780128145623000059 Kutbay, Uurhan. (2018). Partitional Clustering. 10.5772/intechopen.75836. GeeksforGeeks. (2021, October 6). ML | Hierarchical clustering (Agglomerative and Divisive clustering). https://www.geeksforgeeks.org/ml-hierarchical-clustering-agglomerative-and-divisive-clustering/?ref=rp University of New South Wales. (2011). Encyclopedia of Machine Learning | SpringerLink. https://link.springer.com/referencework/10.1007/978-0-387-30164-8?error=cookies_not_supported&amp;code=8e181975-25bd-48b9-9d39-884fe371b2f5 Sharma, R. (2021, September 29). What is Clustering and Different Types of Clustering Methods. UpGrad Blog. https://www.upgrad.com/blog/clustering-and-types-of-clustering-methods/ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
